version: '3.5'

services:
  nginx:
    image: dockercountry/bash-nginx-alpine:1.0.0
    #build: ./docker/nginx/
    volumes:
      - ./expressjs:/var/www/expressjs
      - ./certs:/etc/ssl/certs
      - ./docker/nginx/log:/etc/nginx/log
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
#      - ./docker/nginx/expressjs.local.conf:/etc/nginx/conf.d/expressjs.local.conf
      - ./docker/nginx/ssl-params.conf:/etc/nginx/ssl-params.conf
    ports:
      - "80:80"
      - "443:443"
    links:
      - nodeserver
      - db-auth
#      - redis

  nodeserver:
    container_name: nodeserver
    image: dockercountry/nodejs-alpine:1.0.1
#    build: .
    ports:
      - "81:8005"
    volumes:
      - ./expressjs:/var/www/expressjs
    working_dir: /var/www/expressjs
#    command: bash -c "npm start"
    tty: true
    links:
      - db-auth

  frontend:
    container_name: frontend
    image: dockercountry/nodejs-alpine:1.0.1
    ports:
      - "82:8081"
    volumes:
      - ./client:/var/www/client
    working_dir: /var/www/client
    #command: bash -c "npm run serve"
    tty: true
    links:
      - nodeserver


  db-auth:
    container_name: db_auth
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=admin
    image: postgres:13.9-alpine3.17
    volumes:
      - ./docker/db:/var/lib/postgresql/data
