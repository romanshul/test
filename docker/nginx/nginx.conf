upstream loadbalancer {
  server nodeserver:8005;
}

upstream loadbalancer1 {
    server frontend:8081;
}

server {
  listen 80;
  server_name colors.local www.colors.local;
  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_pass http://loadbalancer;
  }
}

server {
  listen 80;
  server_name colorsvue.local www.colorsvue.local;
  location / {
    proxy_pass http://loadbalancer1;
  }
}

server {
    server_tokens off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 15;
    types_hash_max_size 2048;
    client_max_body_size 20M;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log /dev/stdout;
    error_log /dev/stderr;
    gzip on;
    gzip_disable "msie6";

    add_header X-Frame-Options "SAMEORIGIN";
    charset utf-8;

    # For https
    listen 443 ssl;
    listen [::]:443 ssl ipv6only=on;
    server_name colors.local www.colors.local;

    ssl on;
    ssl_certificate /etc/ssl/certs/colors.local.crt;
    ssl_certificate_key /etc/ssl/certs/colors.local.key;

    add_header Strict-Transport-Security max-age=15768000;

    include ssl-params.conf;

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://loadbalancer;
    }
}